{"pageProps":{"title":"Creating a keyboard shortcut to console log the selected javascript expression in VSCode","dateString":"2020-09-07","slug":"vscode-console-log","description":"","tags":["vscode"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Creating a keyboard shortcut to console log the selected javascript expression in VSCode\"), mdx(\"p\", null, \"Command Shift P -> Configure User Snippets -> Create New\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n    // Console log the selected expressinn\\n    \\\"consolelog\\\": {\\n        \\\"scope\\\": \\\"javascript, typescript\\\",\\n        \\\"prefix\\\": \\\"consolelog\\\",\\n        \\\"body\\\": [\\n            \\\"console.log(`$TM_SELECTED_TEXT - ${$TM_SELECTED_TEXT}`);\\\",\\n            \\\"$TM_SELECTED_TEXT$2\\\"\\n        ],\\n        \\\"description\\\": \\\"Console log the selected expression\\\"\\n    }\\n}\\n\")), mdx(\"p\", null, \"Command Shift P -> Open Keyboard Shortcuts (JSON)\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[\\n    {\\n        \\\"key\\\": \\\"cmd+ctrl+c\\\",\\n        \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\",\\n        \\\"args\\\": {\\n            \\\"name\\\": \\\"consolelog\\\"\\n        }\\n    },\\n]\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h2>Creating a keyboard shortcut to console log the selected javascript expression in VSCode</h2><p>Command Shift P -&gt; Configure User Snippets -&gt; Create New</p><pre><code>{\n    // Console log the selected expressinn\n    &quot;consolelog&quot;: {\n        &quot;scope&quot;: &quot;javascript, typescript&quot;,\n        &quot;prefix&quot;: &quot;consolelog&quot;,\n        &quot;body&quot;: [\n            &quot;console.log(`$TM_SELECTED_TEXT - ${$TM_SELECTED_TEXT}`);&quot;,\n            &quot;$TM_SELECTED_TEXT$2&quot;\n        ],\n        &quot;description&quot;: &quot;Console log the selected expression&quot;\n    }\n}\n</code></pre><p>Command Shift P -&gt; Open Keyboard Shortcuts (JSON)</p><pre><code>[\n    {\n        &quot;key&quot;: &quot;cmd+ctrl+c&quot;,\n        &quot;command&quot;: &quot;editor.action.insertSnippet&quot;,\n        &quot;when&quot;: &quot;textInputFocus&quot;,\n        &quot;args&quot;: {\n            &quot;name&quot;: &quot;consolelog&quot;\n        }\n    },\n]\n</code></pre>","scope":{"slug":"vscode-console-log","title":"Creating a keyboard shortcut to console log the selected javascript expression in VSCode","date":"2020-09-07","author":"bebrws","tags":["vscode"]}}},"__N_SSG":true}