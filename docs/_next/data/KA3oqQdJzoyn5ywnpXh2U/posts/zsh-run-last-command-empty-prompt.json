{"pageProps":{"title":"ZSH Plugin to Re-Execute the Last Command After Some Number of Empty Prompts","dateString":"2024-08-26","slug":"zsh-run-last-command-empty-prompt","description":"","tags":["ZSH","shell","zsh-setup","scripting","zsh-Plugin","zsh","plugin","efficiency","productivity","lazy"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/static/repeat-command.mov.gif\",\n    \"alt\": \"A gif showing this shell script in action where after sending 2 empty command prompts the last non empty command prompt is run\"\n  })), mdx(\"h1\", null, \"Why do this? What does this do?\"), mdx(\"p\", null, \"After running a command in the terminal, I often find myself needing to run the same command again. This is especially true when I am working on a project and need to run the same command multiple times in a row.\"), mdx(\"p\", null, \"Or maybe I am remoting into my laptop from my phone and need to run a command that is too long to type out.\"), mdx(\"p\", null, \"I want an easy way to run the last command again without having to type it out or use the up arrow key to find it.\"), mdx(\"p\", null, \"So as I say in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/zsh_reexec\"\n  }, \"README.md\"), \" I have created A ZSH Plugin which will re-execute the last command you entered after so many empty commands.\\nThe plugin uses an ENV variable named REEXEC_PROMPT_COUNT to determine how many empty commands to execute before re-executing the last command which was not empty.\\nThe default count for empty prompts (controlled by an ENV variable) is set to 3. So starting at 0, hitting enter 4 times should rexecute the last command you typed with the default of 3 (it is counting zero based).\"), mdx(\"p\", null, \"The default count feels like a safe number of required empty lines before running the last command. It is unlikely that I would accidentally run the last command by sending a few empty lines in a row. While being easy and quick enough to do that I can deal with the previous mentioned issues easily.\"), mdx(\"h1\", null, \"Setup\"), mdx(\"p\", null, \"I have moved the usage and installation instructions to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/zsh_reexec\"\n  }, \"repo here\"), \".\"), mdx(\"p\", null, \"At the point of writing or really updating this blog post the contents of the plugin were as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-zsh\"\n  }, \"# Plugin to re-execute the last command after a specified number of empty prompts\\n\\n# Function to initialize variables\\nfunction _reexec_init() {\\n  export EMPTY_PROMPT_COUNT=0\\n  export LAST_COMMAND=\\\"\\\"\\n\\n  # Set default value for REEXEC_PROMPT_COUNT if not already set\\n  : ${REEXEC_PROMPT_COUNT:=3}\\n}\\n\\n# Function to be called before each prompt\\nfunction _reexec_preexec() {\\n  export EMPTY_PROMPT_COUNT=0\\n  if [[ -n $1 ]]; then\\n    export LAST_COMMAND=$1\\n  fi\\n}\\n\\n# Function to be called after each command\\nfunction _reexec_precmd() {\\n  if [[ $EMPTY_PROMPT_COUNT -eq $REEXEC_PROMPT_COUNT && -n $LAST_COMMAND ]]; then\\n    echo \\\"Executing: $LAST_COMMAND\\\"\\n    eval \\\"$LAST_COMMAND\\\"\\n    export EMPTY_PROMPT_COUNT=0\\n  elif [[ -z $BUFFER ]]; then\\n    export EMPTY_PROMPT_COUNT=$((EMPTY_PROMPT_COUNT + 1))\\n  else\\n    export EMPTY_PROMPT_COUNT=0\\n  fi\\n}\\n\\n# Set up the hooks\\nfunction _reexec_setup_hooks() {\\n  autoload -Uz add-zsh-hook\\n  add-zsh-hook preexec _reexec_preexec\\n  add-zsh-hook precmd _reexec_precmd\\n}\\n\\n# Initialize and set up hooks when the plugin is loaded\\n_reexec_init\\n_reexec_setup_hooks\\n\")), mdx(\"p\", null, \"Follow the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/zsh_reexec?tab=readme-ov-file#installation\"\n  }, \"instructions here\"), \" and you easily or lazily be rerunning whatever your working on in no time.\"));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<p><img src=\"/static/repeat-command.mov.gif\" alt=\"A gif showing this shell script in action where after sending 2 empty command prompts the last non empty command prompt is run\"/></p><h1>Why do this? What does this do?</h1><p>After running a command in the terminal, I often find myself needing to run the same command again. This is especially true when I am working on a project and need to run the same command multiple times in a row.</p><p>Or maybe I am remoting into my laptop from my phone and need to run a command that is too long to type out.</p><p>I want an easy way to run the last command again without having to type it out or use the up arrow key to find it.</p><p>So as I say in the <a href=\"https://github.com/bebrws/zsh_reexec\">README.md</a> I have created A ZSH Plugin which will re-execute the last command you entered after so many empty commands.\nThe plugin uses an ENV variable named REEXEC_PROMPT_COUNT to determine how many empty commands to execute before re-executing the last command which was not empty.\nThe default count for empty prompts (controlled by an ENV variable) is set to 3. So starting at 0, hitting enter 4 times should rexecute the last command you typed with the default of 3 (it is counting zero based).</p><p>The default count feels like a safe number of required empty lines before running the last command. It is unlikely that I would accidentally run the last command by sending a few empty lines in a row. While being easy and quick enough to do that I can deal with the previous mentioned issues easily.</p><h1>Setup</h1><p>I have moved the usage and installation instructions to the <a href=\"https://github.com/bebrws/zsh_reexec\">repo here</a>.</p><p>At the point of writing or really updating this blog post the contents of the plugin were as follows:</p><pre><code class=\"language-zsh\"># Plugin to re-execute the last command after a specified number of empty prompts\n\n# Function to initialize variables\nfunction _reexec_init() {\n  export EMPTY_PROMPT_COUNT=0\n  export LAST_COMMAND=&quot;&quot;\n\n  # Set default value for REEXEC_PROMPT_COUNT if not already set\n  : ${REEXEC_PROMPT_COUNT:=3}\n}\n\n# Function to be called before each prompt\nfunction _reexec_preexec() {\n  export EMPTY_PROMPT_COUNT=0\n  if [[ -n $1 ]]; then\n    export LAST_COMMAND=$1\n  fi\n}\n\n# Function to be called after each command\nfunction _reexec_precmd() {\n  if [[ $EMPTY_PROMPT_COUNT -eq $REEXEC_PROMPT_COUNT &amp;&amp; -n $LAST_COMMAND ]]; then\n    echo &quot;Executing: $LAST_COMMAND&quot;\n    eval &quot;$LAST_COMMAND&quot;\n    export EMPTY_PROMPT_COUNT=0\n  elif [[ -z $BUFFER ]]; then\n    export EMPTY_PROMPT_COUNT=$((EMPTY_PROMPT_COUNT + 1))\n  else\n    export EMPTY_PROMPT_COUNT=0\n  fi\n}\n\n# Set up the hooks\nfunction _reexec_setup_hooks() {\n  autoload -Uz add-zsh-hook\n  add-zsh-hook preexec _reexec_preexec\n  add-zsh-hook precmd _reexec_precmd\n}\n\n# Initialize and set up hooks when the plugin is loaded\n_reexec_init\n_reexec_setup_hooks\n</code></pre><p>Follow the <a href=\"https://github.com/bebrws/zsh_reexec?tab=readme-ov-file#installation\">instructions here</a> and you easily or lazily be rerunning whatever your working on in no time.</p>","scope":{"slug":"zsh-run-last-command-empty-prompt","title":"ZSH Plugin to Re-Execute the Last Command After Some Number of Empty Prompts","date":"2024-08-26","author":"bebrws","tags":["ZSH","shell","zsh-setup","scripting","zsh-Plugin","zsh","plugin","efficiency","productivity","lazy"]}}},"__N_SSG":true}