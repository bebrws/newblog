{"pageProps":{"title":"Getting Around Website Paywalls with Devtools Alone","dateString":"2023-02-24","slug":"how-to-get-around-paywalls-with-debug-tools","description":"","tags":["Hacking","Debugging","Chrome","devtools","javascript","paywalls","bypass","hack"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\n\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Everyone Hates Paywalls\"), mdx(\"p\", null, \"While opening up dev tools in any browser and removing a paywall div is easy, I ever knew that there was an easy way to actually view the rest of the content on the page.\"), mdx(\"p\", null, \"The trick is that you find the content in the DOM you are looking for. This can be done in a number of ways. In the video I resized the page and the content comes into view. Then I see there are multiple divs below with more content. Normally I woulnd't know how to easily view this content. However Chrome has a nice feature where if you right click on a div and click \\\"scroll into view\\\" it will scroll down to that div.\"), mdx(\"p\", null, \"So the first step is to delete the paywall div, then the second step is to find the divs with the text your interested in. Then you right click on that div and click scroll into view.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/static/paywalls.gif\",\n    \"alt\": \"Describing pods\"\n  })), mdx(\"h2\", null, \"Useful Tips from Hacker News Comments\"), mdx(\"h3\", null, \"From: drewtato\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Usually on these sites, there'll be an `overflow: hidden` element that's holding all the content. If you can find and disable that CSS line, it'll work as normal. Or just save it to the Wayback Machine and read it through that.\\nreply\\n\")), mdx(\"p\", null, \"I looked into it and I believe the above could be done with the following:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"$x(\\\"//div[contains(@style,'overflow: hidden')]\\\")\\n\")), mdx(\"h3\", null, \"From: prettyStandard\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Not sure if this is exactly right, but something like this should obviate the need to find the element holding all the content.\\n* { overflow: visible !important; }\\n\")), mdx(\"h3\", null, \"From: batperson\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"In the case of Washington Post it just has a \\\"position: fixed\\\" style on the <body> element. That's usually the case with most of these scroll locking sites, one of the root parent elements will have some CSS style that you can click off.\\n\")), mdx(\"h3\", null, \"From: start123\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"I just use Firefox's reader view. Does the same with just a click. If it doesn't work, just refresh in reader view and it should load properly.\\nreply\\n\")));\n}\n\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1>Everyone Hates Paywalls</h1><p>While opening up dev tools in any browser and removing a paywall div is easy, I ever knew that there was an easy way to actually view the rest of the content on the page.</p><p>The trick is that you find the content in the DOM you are looking for. This can be done in a number of ways. In the video I resized the page and the content comes into view. Then I see there are multiple divs below with more content. Normally I woulnd&#x27;t know how to easily view this content. However Chrome has a nice feature where if you right click on a div and click &quot;scroll into view&quot; it will scroll down to that div.</p><p>So the first step is to delete the paywall div, then the second step is to find the divs with the text your interested in. Then you right click on that div and click scroll into view.</p><p><img src=\"/static/paywalls.gif\" alt=\"Describing pods\"/></p><h2>Useful Tips from Hacker News Comments</h2><h3>From: drewtato</h3><pre><code>Usually on these sites, there&#x27;ll be an `overflow: hidden` element that&#x27;s holding all the content. If you can find and disable that CSS line, it&#x27;ll work as normal. Or just save it to the Wayback Machine and read it through that.\nreply\n</code></pre><p>I looked into it and I believe the above could be done with the following:</p><pre><code>$x(&quot;//div[contains(@style,&#x27;overflow: hidden&#x27;)]&quot;)\n</code></pre><h3>From: prettyStandard</h3><pre><code>Not sure if this is exactly right, but something like this should obviate the need to find the element holding all the content.\n* { overflow: visible !important; }\n</code></pre><h3>From: batperson</h3><pre><code>In the case of Washington Post it just has a &quot;position: fixed&quot; style on the &lt;body&gt; element. That&#x27;s usually the case with most of these scroll locking sites, one of the root parent elements will have some CSS style that you can click off.\n</code></pre><h3>From: start123</h3><pre><code>I just use Firefox&#x27;s reader view. Does the same with just a click. If it doesn&#x27;t work, just refresh in reader view and it should load properly.\nreply\n</code></pre>","scope":{"slug":"how-to-get-around-paywalls-with-debug-tools","title":"Getting Around Website Paywalls with Devtools Alone","date":"2023-02-24","author":"bebrws","tags":["Hacking","Debugging","Chrome","devtools","javascript","paywalls","bypass","hack"]}}},"__N_SSG":true}