{"pageProps":{"title":"Debugging a Rust process in VSCode by attaching to process - useful for say.. a terminal emulator","dateString":"2020-12-20","slug":"rust-debug-vscode","description":"","tags":["rust"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Visual Studio Code launch.json\"), mdx(\"p\", null, \"You will want to use something similar to:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"{\\n    // Use IntelliSense to learn about possible attributes.\\n    // Hover to view descriptions of existing attributes.\\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\\n    \\\"version\\\": \\\"0.2.0\\\",\\n    \\\"configurations\\\": [\\n        {\\n            \\\"type\\\": \\\"lldb\\\",\\n            \\\"request\\\": \\\"launch\\\",\\n            \\\"stopOnEntry\\\": true,\\n            \\\"name\\\": \\\"Debug with LLDB\\\",\\n            \\\"program\\\": \\\"${workspaceRoot}/target/debug/your_project_name\\\",\\n            \\\"args\\\": [],\\n            \\\"cwd\\\": \\\"${workspaceRoot}/\\\",\\n            \\\"sourceLanguages\\\": [\\n                \\\"rust\\\"\\n            ],\\n        },\\n        {\\n            \\\"type\\\": \\\"lldb\\\",\\n            \\\"request\\\": \\\"attach\\\",\\n            \\\"pid\\\": \\\"${command:pickMyProcess}\\\",\\n            \\\"name\\\": \\\"Attach LLDB\\\",\\n            \\\"program\\\": \\\"${workspaceRoot}/target/debug/your_project_name\\\",\\n            \\\"sourceLanguages\\\": [\\n                \\\"rust\\\"\\n            ],\\n        }\\n    ]\\n}\\n\")), mdx(\"p\", null, \"NOTE: You will wan to change the program property to point to your binary (from your_project_name to whatever your project is)!\"), mdx(\"p\", null, \"That should be it though!\"));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h1 id=\"Visual%20Studio%20Code%20launch%2ejson\" class=\"jsx-2373991563\"><a href=\"#Visual%20Studio%20Code%20launch%2ejson\" class=\"jsx-2373991563\">Visual Studio Code launch.json</a></h1></div><p>You will want to use something similar to:</p><pre><code>{\n    // Use IntelliSense to learn about possible attributes.\n    // Hover to view descriptions of existing attributes.\n    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\n    &quot;version&quot;: &quot;0.2.0&quot;,\n    &quot;configurations&quot;: [\n        {\n            &quot;type&quot;: &quot;lldb&quot;,\n            &quot;request&quot;: &quot;launch&quot;,\n            &quot;stopOnEntry&quot;: true,\n            &quot;name&quot;: &quot;Debug with LLDB&quot;,\n            &quot;program&quot;: &quot;${workspaceRoot}/target/debug/your_project_name&quot;,\n            &quot;args&quot;: [],\n            &quot;cwd&quot;: &quot;${workspaceRoot}/&quot;,\n            &quot;sourceLanguages&quot;: [\n                &quot;rust&quot;\n            ],\n        },\n        {\n            &quot;type&quot;: &quot;lldb&quot;,\n            &quot;request&quot;: &quot;attach&quot;,\n            &quot;pid&quot;: &quot;${command:pickMyProcess}&quot;,\n            &quot;name&quot;: &quot;Attach LLDB&quot;,\n            &quot;program&quot;: &quot;${workspaceRoot}/target/debug/your_project_name&quot;,\n            &quot;sourceLanguages&quot;: [\n                &quot;rust&quot;\n            ],\n        }\n    ]\n}\n</code></pre><p>NOTE: You will wan to change the program property to point to your binary (from your_project_name to whatever your project is)!</p><p>That should be it though!</p>","scope":{"slug":"rust-debug-vscode","title":"Debugging a Rust process in VSCode by attaching to process - useful for say.. a terminal emulator","date":"2020-12-20","author":"bebrws","tags":["rust"]}}},"__N_SSG":true}