{"pageProps":{"title":"Convert any video format to a gif","dateString":"2020-09-07","slug":"video-to-gif","description":"","tags":["video"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Converting any video format supported by ffmped to a gif\"), mdx(\"p\", null, \"I have 2 helpful bash/zsh functions I use often.\"), mdx(\"p\", null, \"The first one uses gifsicle to compress the gif further and remove some frames. The second shouldn't have as much loss.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function convertMov2Gif() {\\n  ffmpeg -i $1 -pix_fmt rgb8 -r 10 $1.gif && gifsicle -O3 $1.gif -o $1.gif\\n}\\nalias mov2gif=convertMov2Gif\\n\\nfunction video2gifNoLoss() {\\n  ffmpeg -i $1 -pix_fmt rgb8 $1.gif\\n}\\n\")), mdx(\"p\", null, \"To use to convert a mp4 to a gif:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"video2gifNoLoss someVideo.mp4\\n\")), mdx(\"p\", null, \"Or convert a mov to a gif:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"video2gifNoLoss someVideo.mov\\n\")), mdx(\"p\", null, \"Requires:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"brew install gifsicle ffmpeg\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"Converting%20any%20video%20format%20supported%20by%20ffmped%20to%20a%20gif\" class=\"jsx-2373991563\"><a href=\"#Converting%20any%20video%20format%20supported%20by%20ffmped%20to%20a%20gif\" class=\"jsx-2373991563\">Converting any video format supported by ffmped to a gif</a></h2></div><p>I have 2 helpful bash/zsh functions I use often.</p><p>The first one uses gifsicle to compress the gif further and remove some frames. The second shouldn&#x27;t have as much loss.</p><pre><code>function convertMov2Gif() {\n  ffmpeg -i $1 -pix_fmt rgb8 -r 10 $1.gif &amp;&amp; gifsicle -O3 $1.gif -o $1.gif\n}\nalias mov2gif=convertMov2Gif\n\nfunction video2gifNoLoss() {\n  ffmpeg -i $1 -pix_fmt rgb8 $1.gif\n}\n</code></pre><p>To use to convert a mp4 to a gif:</p><pre><code>video2gifNoLoss someVideo.mp4\n</code></pre><p>Or convert a mov to a gif:</p><pre><code>video2gifNoLoss someVideo.mov\n</code></pre><p>Requires:</p><pre><code>brew install gifsicle ffmpeg\n</code></pre>","scope":{"slug":"video-to-gif","title":"Convert any video format to a gif","date":"2020-09-07","author":"bebrws","tags":["video"]}}},"__N_SSG":true}