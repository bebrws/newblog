{"pageProps":{"title":"Creating a Snake Game Clone with Rust and Bevy","dateString":"2024-02-19","slug":"bevy-snake","description":"","tags":["Rust","bevy","WASM","WebAssembly","game"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Rust Practice with Bevy\"), mdx(\"p\", null, \"Bevy has an amazing dependency injection system that makes its \\\"ECS\\\" (Entity Component System) architecture very easy and ituitive to use.\\nReally the DI system is one of the most amazing Rust feats that I have seen so far.\"), mdx(\"p\", null, \"Someone has taken the time to document how to create your own \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://promethia-27.github.io/dependency_injection_like_bevy_from_scratch/chapter1/system.html\"\n  }, \"Bevy based DI system here which is a great read\")), mdx(\"p\", null, \"There is also an unofficial Bevy book that is really helpful \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://bevy-cheatbook.github.io/programming/intro-data.html\"\n  }, \"here\")), mdx(\"h1\", null, \"My Snake Clone\"), mdx(\"p\", null, \"Can be found \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/bevy-snake\"\n  }, \"here\")), mdx(\"h1\", null, \"And Compiled to WASM and Played Here!\"), mdx(React.Fragment, null, mdx(\"canvas\", {\n    id: \"bevy-portal\",\n    tabindex: \"0\",\n    \"data-raw-handle\": \"1\",\n    alt: \"app\",\n    cursor: \"auto\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h1>Rust Practice with Bevy</h1><p>Bevy has an amazing dependency injection system that makes its &quot;ECS&quot; (Entity Component System) architecture very easy and ituitive to use.\nReally the DI system is one of the most amazing Rust feats that I have seen so far.</p><p>Someone has taken the time to document how to create your own <a href=\"https://promethia-27.github.io/dependency_injection_like_bevy_from_scratch/chapter1/system.html\">Bevy based DI system here which is a great read</a></p><p>There is also an unofficial Bevy book that is really helpful <a href=\"https://bevy-cheatbook.github.io/programming/intro-data.html\">here</a></p><h1>My Snake Clone</h1><p>Can be found <a href=\"https://github.com/bebrws/bevy-snake\">here</a></p><h1>And Compiled to WASM and Played Here!</h1><canvas id=\"bevy-portal\" tabindex=\"0\" data-raw-handle=\"1\" alt=\"app\" cursor=\"auto\"></canvas>","scope":{"slug":"bevy-snake","title":"Creating a Snake Game Clone with Rust and Bevy","date":"2024-02-19","author":"bebrws","tags":["Rust","bevy","WASM","WebAssembly","game"]}}},"__N_SSG":true}