{"pageProps":{"title":"ZSH hook on directory change to update NVM Node version automatically","dateString":"2022-03-31","slug":"nvm-zsh","description":"","tags":["zsh","Node.js","Node","NVM","Shell Scripting","JS"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Automatically having NVM set the Node version by directory using the .nvmrc file\"), mdx(\"p\", null, \"It seems like NVM is the Node version manager of choice for Node.js.\"), mdx(\"p\", null, \"I didn't want to have to remember to set the Node version manually every time I changed directory so I wrote this helpful ZSH\\nhook on directory change and added it to my zshrc.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    export NVM_DIR=\\\"$HOME/.nvm\\\"\\n    [ -s \\\"$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"$NVM_DIR/nvm.sh\\\"  # This loads nvm\\n    [ -s \\\"$NVM_DIR/bash_completion\\\" ] && \\\\. \\\"$NVM_DIR/bash_completion\\\"  # This loads nvm bash_completion\\n\\n    function set_nvm_version() {\\n        emulate -L zsh\\n        [ -s \\\"`pwd`/.nvmrc\\\" ] && nvm use\\n    }\\n    chpwd_functions=(${chpwd_functions[@]} \\\"set_nvm_version\\\")\\n\")), mdx(\"p\", null, \"Now every time I change directories ZSH will check to see if a .nvmrc exists in the directory and if it does it will run\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"    nvm use\\n\")), mdx(\"p\", null, \"to take set the Node version. Very helpful if you are forgetful :)\"));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"Automatically%20having%20NVM%20set%20the%20Node%20version%20by%20directory%20using%20the%20%2envmrc%20file\" class=\"jsx-2373991563\"><a href=\"#Automatically%20having%20NVM%20set%20the%20Node%20version%20by%20directory%20using%20the%20%2envmrc%20file\" class=\"jsx-2373991563\">Automatically having NVM set the Node version by directory using the .nvmrc file</a></h2></div><p>It seems like NVM is the Node version manager of choice for Node.js.</p><p>I didn&#x27;t want to have to remember to set the Node version manually every time I changed directory so I wrote this helpful ZSH\nhook on directory change and added it to my zshrc.</p><pre><code>    export NVM_DIR=&quot;$HOME/.nvm&quot;\n    [ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;  # This loads nvm\n    [ -s &quot;$NVM_DIR/bash_completion&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/bash_completion&quot;  # This loads nvm bash_completion\n\n    function set_nvm_version() {\n        emulate -L zsh\n        [ -s &quot;`pwd`/.nvmrc&quot; ] &amp;&amp; nvm use\n    }\n    chpwd_functions=(${chpwd_functions[@]} &quot;set_nvm_version&quot;)\n</code></pre><p>Now every time I change directories ZSH will check to see if a .nvmrc exists in the directory and if it does it will run</p><pre><code>    nvm use\n</code></pre><p>to take set the Node version. Very helpful if you are forgetful :)</p>","scope":{"slug":"nvm-zsh","title":"ZSH hook on directory change to update NVM Node version automatically","date":"2022-03-31","author":"bebrws","tags":["zsh","Node.js","Node","NVM","Shell Scripting","JS"]}}},"__N_SSG":true}