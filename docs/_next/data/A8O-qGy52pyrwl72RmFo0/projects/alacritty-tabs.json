{"pageProps":{"title":"Alacritty - tab support","dateString":"2021-01-17","slug":"alacritty-tabs","description":"","tags":["alacritty"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"Re-Write of The Alacritty Event Loop\"), mdx(\"p\", null, \"While getting started on this I found an awesome project named \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/nw0/session-manager\"\n  }, \"session-manager\"), \".\"), mdx(\"p\", null, \"This provided a great way for me to see how the lower level TTY code and ansi processing was implemented.\"), mdx(\"p\", null, \"I played around with this for a while, adding support for colors and then upon realizing that most of this session-manager code came from Alacritty, decided that I should give adding tabs to Alacritty a shot.\"), mdx(\"p\", null, \"When digging into the Alacritty source I realized I would need some struct to manage the tabs and Term/PTY struct state throughout the app. Unfortunately this meant passing around an\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"Arc<Mutex<T>>\\n\")), mdx(\"p\", null, \"and lots of locking and unlocking.\"), mdx(\"p\", null, \"Luckily this mutex use along with the removal of the use of channels actually lead to performance improvements. I believe this may mostly be due to the simplified process of reading input from the TTY file descriptor. I now just spin off a thread for each tty and in that thread there is a simple loop which reads and then writes directly to the ansi processor, skipping the previous process of sending bytes over a channel and then into an event loop.\"), mdx(\"p\", null, \"Currently the key bindings default to Command + T for a new tab. Command + Shift + Left Bracket for previous tab and Command + Shift + Right Bracket for the next tab.\"), mdx(\"p\", null, \"The latest build of Alacritty with tabs can be found at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/alacritty-tabs/releases/\"\n  }, \"the release page\"), \".\"), mdx(\"p\", null, \"The code is up at \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/bebrws/alacritty-tabs/\"\n  }, \"alacritty-tabs\"), \". Note that this has only been tested on OSX.\"), mdx(\"h2\", null, \"New Functionality\"), mdx(\"p\", null, \"Ability to jump back up to the last time the return key was pressed\"), mdx(\"p\", null, \"Defaults to Command + G\"), mdx(\"h2\", null, \"Screen Capture with Tabs\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/static/alacrittytabs.gif\",\n    \"alt\": \"Alacritty With Tabs in action\"\n  })), mdx(\"h2\", null, \"Example alacritty.yml file:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\nbackground_opacity: 1\\nwindow:\\n  dimensions:\\n    columns: 150\\n    lines: 50\\n  padding:\\n    x: 10\\n    y: 10\\n  dynamic_padding: true\\n  decorations: buttonless\\nscrolling:\\n  history: 10000\\n  multiplier: 40\\nkey_bindings:\\n  - key: W\\n    mods: Command\\n    action: ToggleFullscreen\\n  - key: N\\n    mods: Command|Shift\\n    action: SpawnNewInstance\\n  - key: F\\n    mods: Command|Shift\\n    action: ToggleFullscreen\\n  - key: Equals\\n    mods: Command|Shift\\n    action: IncreaseFontSize\\n  - key: Minus\\n    mods: Command|Shift\\n    action: DecreaseFontSize\\nfont:\\n  size: 12\\n  normal:\\n    family: Menlo\\n    style: Regular\\n  bold:\\n    family: Menlo\\n    style: Bold\\n  italic:\\n    family: Menlo\\n    style: Italic\\ncustom_cursor_colors: true\\ncolors:\\n  # Default colors\\n  primary:\\n    # hard contrast: background = '#f9f5d7'\\n    background: '#1A2025'\\n    foreground: '#e3dfc5'\\n\\n    dim_foreground: '#dbdbdb'\\n    bright_foreground: '#d9d9d9'\\n    dim_background: '#202020'    # not sure\\n    bright_background: '#3a3a3a' # not sure\\n\\n  # Cursor colors\\n  cursor:\\n    text: '#2c2c2c'\\n    cursor: '#d9d9d9'\\n\\n  # Normal colors\\n  vi_mode_cursor:\\n    text: '#2e3440'\\n    cursor: '#d8dee9'\\n  selection:\\n    text: CellForeground\\n    background: '#4c566a'\\n  search:\\n    matches:\\n      foreground: CellBackground\\n      background: '#abd3de'\\n    bar:\\n      background: '#434c5e'\\n      foreground: '#d8dee9'\\n  normal:\\n  # Bright colors\\n    black: '#1c1c1c'\\n    red: '#bc5653'\\n    green: '#b4c28a'\\n    yellow: '#ebc17a'\\n    blue: '#7eaac7'\\n    magenta: '#aa6292'\\n    cyan: '#d3dde8'\\n    white: '#cacaca'\\n\\n  # Bright colors\\n  bright:\\n    black: '#636363'\\n    red: '#bc5653'\\n    green: '#b4c28a'\\n    yellow: '#ebc17a'\\n    blue: '#7eaac7'\\n    magenta: '#aa6292'\\n    cyan: '#d3dde8'\\n    white: '#f7f7f7'\\n\\n  # Dim colors\\n  dim:\\n    black: '#232323'\\n    red: '#74423f'\\n    green: '#9ea880'\\n    yellow: '#8b7653'\\n    blue: '#556b79'\\n    magenta: '#6e4962'\\n    cyan: '#5c8482'\\n    white: '#828282'\\n  indexed_colors:\\n    - {index: 16, color: '#232323'}\\n    - {index: 17, color: '#d65d0e'}\\n    - {index: 18, color: '#000000'}\\n    - {index: 19, color: '#d5c4a1'}\\n    - {index: 20, color: '#665c54'}\\n    - {index: 21, color: '#3c3836'}\\nhide_cursor_when_typing: true\\nshell:\\n  program: /bin/zsh\\n  args:\\n    - -l\\n\\n\\n\")), mdx(\"p\", null, \"This can be copy and pasted into a file which should be placed at:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"~/.config/alacritty/alacritty.yml\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"Re%2dWrite%20of%20The%20Alacritty%20Event%20Loop\" class=\"jsx-2373991563\"><a href=\"#Re%2dWrite%20of%20The%20Alacritty%20Event%20Loop\" class=\"jsx-2373991563\">Re-Write of The Alacritty Event Loop</a></h2></div><p>While getting started on this I found an awesome project named <a href=\"https://github.com/nw0/session-manager\">session-manager</a>.</p><p>This provided a great way for me to see how the lower level TTY code and ansi processing was implemented.</p><p>I played around with this for a while, adding support for colors and then upon realizing that most of this session-manager code came from Alacritty, decided that I should give adding tabs to Alacritty a shot.</p><p>When digging into the Alacritty source I realized I would need some struct to manage the tabs and Term/PTY struct state throughout the app. Unfortunately this meant passing around an</p><pre><code>Arc&lt;Mutex&lt;T&gt;&gt;\n</code></pre><p>and lots of locking and unlocking.</p><p>Luckily this mutex use along with the removal of the use of channels actually lead to performance improvements. I believe this may mostly be due to the simplified process of reading input from the TTY file descriptor. I now just spin off a thread for each tty and in that thread there is a simple loop which reads and then writes directly to the ansi processor, skipping the previous process of sending bytes over a channel and then into an event loop.</p><p>Currently the key bindings default to Command + T for a new tab. Command + Shift + Left Bracket for previous tab and Command + Shift + Right Bracket for the next tab.</p><p>The latest build of Alacritty with tabs can be found at <a href=\"https://github.com/bebrws/alacritty-tabs/releases/\">the release page</a>.</p><p>The code is up at <a href=\"https://github.com/bebrws/alacritty-tabs/\">alacritty-tabs</a>. Note that this has only been tested on OSX.</p><div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"New%20Functionality\" class=\"jsx-2373991563\"><a href=\"#New%20Functionality\" class=\"jsx-2373991563\">New Functionality</a></h2></div><p>Ability to jump back up to the last time the return key was pressed</p><p>Defaults to Command + G</p><div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"Screen%20Capture%20with%20Tabs\" class=\"jsx-2373991563\"><a href=\"#Screen%20Capture%20with%20Tabs\" class=\"jsx-2373991563\">Screen Capture with Tabs</a></h2></div><p><img src=\"/static/alacrittytabs.gif\" alt=\"Alacritty With Tabs in action\"/></p><div style=\"position:relative\"><span style=\"position:absolute;margin-left:-1.5em;font-weight:300;font-size:1.5rem;color:#9b9b9b\">#</span><h2 id=\"Example%20alacritty%2eyml%20file%3a\" class=\"jsx-2373991563\"><a href=\"#Example%20alacritty%2eyml%20file%3a\" class=\"jsx-2373991563\">Example alacritty.yml file:</a></h2></div><pre><code>\nbackground_opacity: 1\nwindow:\n  dimensions:\n    columns: 150\n    lines: 50\n  padding:\n    x: 10\n    y: 10\n  dynamic_padding: true\n  decorations: buttonless\nscrolling:\n  history: 10000\n  multiplier: 40\nkey_bindings:\n  - key: W\n    mods: Command\n    action: ToggleFullscreen\n  - key: N\n    mods: Command|Shift\n    action: SpawnNewInstance\n  - key: F\n    mods: Command|Shift\n    action: ToggleFullscreen\n  - key: Equals\n    mods: Command|Shift\n    action: IncreaseFontSize\n  - key: Minus\n    mods: Command|Shift\n    action: DecreaseFontSize\nfont:\n  size: 12\n  normal:\n    family: Menlo\n    style: Regular\n  bold:\n    family: Menlo\n    style: Bold\n  italic:\n    family: Menlo\n    style: Italic\ncustom_cursor_colors: true\ncolors:\n  # Default colors\n  primary:\n    # hard contrast: background = &#x27;#f9f5d7&#x27;\n    background: &#x27;#1A2025&#x27;\n    foreground: &#x27;#e3dfc5&#x27;\n\n    dim_foreground: &#x27;#dbdbdb&#x27;\n    bright_foreground: &#x27;#d9d9d9&#x27;\n    dim_background: &#x27;#202020&#x27;    # not sure\n    bright_background: &#x27;#3a3a3a&#x27; # not sure\n\n  # Cursor colors\n  cursor:\n    text: &#x27;#2c2c2c&#x27;\n    cursor: &#x27;#d9d9d9&#x27;\n\n  # Normal colors\n  vi_mode_cursor:\n    text: &#x27;#2e3440&#x27;\n    cursor: &#x27;#d8dee9&#x27;\n  selection:\n    text: CellForeground\n    background: &#x27;#4c566a&#x27;\n  search:\n    matches:\n      foreground: CellBackground\n      background: &#x27;#abd3de&#x27;\n    bar:\n      background: &#x27;#434c5e&#x27;\n      foreground: &#x27;#d8dee9&#x27;\n  normal:\n  # Bright colors\n    black: &#x27;#1c1c1c&#x27;\n    red: &#x27;#bc5653&#x27;\n    green: &#x27;#b4c28a&#x27;\n    yellow: &#x27;#ebc17a&#x27;\n    blue: &#x27;#7eaac7&#x27;\n    magenta: &#x27;#aa6292&#x27;\n    cyan: &#x27;#d3dde8&#x27;\n    white: &#x27;#cacaca&#x27;\n\n  # Bright colors\n  bright:\n    black: &#x27;#636363&#x27;\n    red: &#x27;#bc5653&#x27;\n    green: &#x27;#b4c28a&#x27;\n    yellow: &#x27;#ebc17a&#x27;\n    blue: &#x27;#7eaac7&#x27;\n    magenta: &#x27;#aa6292&#x27;\n    cyan: &#x27;#d3dde8&#x27;\n    white: &#x27;#f7f7f7&#x27;\n\n  # Dim colors\n  dim:\n    black: &#x27;#232323&#x27;\n    red: &#x27;#74423f&#x27;\n    green: &#x27;#9ea880&#x27;\n    yellow: &#x27;#8b7653&#x27;\n    blue: &#x27;#556b79&#x27;\n    magenta: &#x27;#6e4962&#x27;\n    cyan: &#x27;#5c8482&#x27;\n    white: &#x27;#828282&#x27;\n  indexed_colors:\n    - {index: 16, color: &#x27;#232323&#x27;}\n    - {index: 17, color: &#x27;#d65d0e&#x27;}\n    - {index: 18, color: &#x27;#000000&#x27;}\n    - {index: 19, color: &#x27;#d5c4a1&#x27;}\n    - {index: 20, color: &#x27;#665c54&#x27;}\n    - {index: 21, color: &#x27;#3c3836&#x27;}\nhide_cursor_when_typing: true\nshell:\n  program: /bin/zsh\n  args:\n    - -l\n\n\n</code></pre><p>This can be copy and pasted into a file which should be placed at:</p><pre><code>~/.config/alacritty/alacritty.yml\n</code></pre>","scope":{"slug":"alacritty-tabs","title":"Alacritty - tab support","date":"2021-01-17","author":"bebrws","tags":["alacritty"]}}},"__N_SSG":true}