{"pageProps":{"title":"addAlias - taking notes and improving productivity","dateString":"2020-08-31","slug":"add-alias","description":"","tags":["zsh"],"author":"bebrws","source":{"compiledSource":"\"use strict\";\n\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nfunction MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"A most useful, simple bash function\"), mdx(\"p\", null, \"A year or two ago I came up with a very simple bash/zsh function which I really like.\"), mdx(\"p\", null, \"It is addAlias.\"), mdx(\"p\", null, \"All it does is take the first argument, a string representing the new alias name, and a second argument being a string repsenting the alias itself.\"), mdx(\"p\", null, \"It then echos this into a file which I source in my .zshrc\"), mdx(\"p\", null, \"The great part about this is that I can be working throughout the day and come across some command line tool or collection of commands that are very useful and not have to write them down or remember them.\"), mdx(\"p\", null, \"I just addAlias them, like:\"), mdx(\"p\", null, \"addAlias gitListUntrackedFiles 'git ls-files --others --exclude-standard'\"), mdx(\"p\", null, \"Then when I forget how to do that git command that lists untracked files I just type git then hit tab a few times. Then this option will appear and I can select it from the list. Saving a ton of time.\"), mdx(\"p\", null, \"To use this add the following to your .zshrc\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"function addAlias() {\\n  echo \\\"alias $1='$2' \\\"\\n  echo \\\"alias $1='$2' \\\" >>  $HOME/myaliases.zsh\\n  echo \\\"\\\" >>  $HOME/myaliases.zsh\\n  source $HOME/myaliases.zsh\\n}\\n\\nsource $HOME/myaliases.zsh\\n\\n\")), mdx(\"p\", null, \"As you can see it also echos out the alias after you are done so you can make sure no bad string escaping happened.\"));\n}\n;\nMDXContent.isMDXComponent = true;","renderedOutput":"<h2>A most useful, simple bash function</h2><p>A year or two ago I came up with a very simple bash/zsh function which I really like.</p><p>It is addAlias.</p><p>All it does is take the first argument, a string representing the new alias name, and a second argument being a string repsenting the alias itself.</p><p>It then echos this into a file which I source in my .zshrc</p><p>The great part about this is that I can be working throughout the day and come across some command line tool or collection of commands that are very useful and not have to write them down or remember them.</p><p>I just addAlias them, like:</p><p>addAlias gitListUntrackedFiles &#x27;git ls-files --others --exclude-standard&#x27;</p><p>Then when I forget how to do that git command that lists untracked files I just type git then hit tab a few times. Then this option will appear and I can select it from the list. Saving a ton of time.</p><p>To use this add the following to your .zshrc</p><pre><code>function addAlias() {\n  echo &quot;alias $1=&#x27;$2&#x27; &quot;\n  echo &quot;alias $1=&#x27;$2&#x27; &quot; &gt;&gt;  $HOME/myaliases.zsh\n  echo &quot;&quot; &gt;&gt;  $HOME/myaliases.zsh\n  source $HOME/myaliases.zsh\n}\n\nsource $HOME/myaliases.zsh\n\n</code></pre><p>As you can see it also echos out the alias after you are done so you can make sure no bad string escaping happened.</p>","scope":{"slug":"add-alias","title":"addAlias - taking notes and improving productivity","date":"2020-08-31","author":"bebrws","tags":["zsh"]}}},"__N_SSG":true}